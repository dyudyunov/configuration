---

- name: Get kernel version
  command: "uname -r"
  register: uname_out
  tags:
    - install
    - docker

- name: Set kernel version for trusty
  set_fact:
    uname_r: "{{ uname_out.stdout }}"
  tags:
    - install
    - docker

- name: Remove docker.io version
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
    state: "absent"
  when: docker_edition == "ce"
  tags:
    - install
    - docker

- name: Install Docker and role dependencies
  apt:
    name: "{{ docker_common_packages }}"
    state: "present"
    install_recommends: False
    update_cache: True
    cache_valid_time: "{{ docker_apt_cache_time }}"
  tags:
    - install
    - docker

- name: Get upstream APT GPG key
  apt_key:
    url: "{{ docker_gpg_key_url }}"
    state: "present"
    validate_certs: no
  tags:
    - install
    - docker

- name: Configure upstream APT repository
  apt_repository:
    repo: "{{ docker_repository }}"
    state: "present"
    update_cache: True
  tags:
    - install
    - docker

- name: Install Docker
  apt:
    name: "docker{{ '-'~docker_edition if docker_edition != '' else '' }}{{ '='~docker_version if docker_version != '' else '' }}"
    state: "present"
    update_cache: True
    force: True
    install_recommends: False
    cache_valid_time: "{{ docker_apt_cache_time }}"
    allow_unauthenticated: True
  tags:
    - install
    - docker

- name: Remove Upstart config file
  file:
    path: "/etc/default/docker"
    state: "absent"
  when: not docker_keep_upstart
  tags:
    - install
    - docker

- name: Ensure systemd directory exists
  file:
    path: "/etc/systemd/system"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
  when: ansible_distribution != "trusty"
  tags:
    - install
    - docker

- name: Generate systemd unit file
  template:
    src: "etc/systemd/system/docker.service.j2"
    dest: "/etc/systemd/system/docker.service"
    owner: "root"
    group: "root"
    mode: "0644"
  when: ansible_distribution != "trusty"
  register: docker_register_systemd_service
  tags:
    - install
    - docker

- name: Set data-root in /etc/docker/daemon.json
  template:
    src: "etc/docker/daemon.json.j2"
    dest: "/etc/docker/daemon.json"
    owner: "root"
    group: "root"
    mode: "0644"
  when: docker_data_root != ""
  notify: ["Restart Docker"]
  tags:
    - install
    - docker

- name: Reload systemd daemon
  command: "systemctl daemon-reload"
  notify: ["Restart Docker"]
  when: (docker_register_systemd_service and
         docker_register_systemd_service is changed and
         ansible_distribution != "trusty")
  tags:
    - install
    - docker

- name: Add specific users to "docker" group
  user:
    name: "{{ item }}"
    groups: "docker"
    append: True
  with_items: "{{ docker_users }}"
  when: docker_users != []
  tags:
    - install
    - docker
    - docker_users

- name: Add MaxSessions=30 to /etc/ssh/sshd_config to allow remote docker-compose
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: 'MaxSessions '
    line: 'MaxSessions 30'
  register: sshd_config

- name: Restart sshd
  service:
    name: sshd
    state: restarted
  when: sshd_config.changed
