---

GAMMA_VERSION: 3.2.3
GAMMA_REPO:
  - PROTOCOL: 'ssh'
    DOMAIN: 'gitlab.raccoongang.com'
    PATH: 'products/rg-gamification'
    REPO: 'gamma.git'
    VERSION: "{{ GAMMA_VERSION }}"
    DESTINATION: "{{ GAMMA_APP_DIR }}"
    SSH_KEY: "{{ GAMMA_GIT_IDENTITY | default(EDXAPP_GIT_IDENTITY) }}"

GAMMA_HOME: "{{ COMMON_APP_DIR }}/gamma"
GAMMA_APP_DIR: "{{ GAMMA_HOME }}/gamma"
GAMMA_USER: gamma

GAMMA_EDX_LMS_BASE_URL: "{{ EDXAPP_LMS_ROOT_URL | default('http://localhost:8000') }}"
GAMMA_EDX_API_KEY: "{{ EDXAPP_EDX_API_KEY | default('PUT_YOUR_API_KEY_HERE') }}"

GAMMA_DEBUG: False

GAMMA_APP_KEY: "{{ RG_GAMIFICATION_KEY | default('Set-Me-Please') }}"
GAMMA_APP_SECRET: "{{ RG_GAMIFICATION_SECRET | default('Set-Me-Please') }}"
GAMMA_DJANGO_ADMIN_EMAIL: 'staff@example.com'
GAMMA_DJANGO_ADMIN_USER: 'staff'
GAMMA_DJANGO_ADMIN_PASS: "{{ EDXAPP_STAFF_PASSWORD | default('MegoSecret1ras') }}"
GAMMA_DJANGO_SETTINGS_MODULE: "gamma.settings.production"
GAMMA_SENTRY_DSN: "{{ COMMON_RG_SENTRY_DSN | default('') }}"
GAMMA_SENTRY_ENV: "{{ COMMON_RG_SENTRY_ENVIRONMENT | default('') }}"
GAMMA_SENTRY_SERVER_NAME: "{{ ansible_host }}"
GAMMA_SENTRY_RELEASE: "{{ GAMMA_VERSION }}"

GAMMA_ENVIRONMENT: "prod" # gamma deployment not ready for DEV, STAGE envs yet

GAMMA_DB_ENGINE: django.db.backends.postgresql
GAMMA_DB_NAME: postgres
GAMMA_DB_USER: postgres
GAMMA_DB_PASSWORD: postgres
GAMMA_DB_HOST: postgres
GAMMA_DB_PORT: 5432

GAMMA_MONGO_URL: 'mongodb://mongo:27017/'
GAMMA_MONGO_DATABASE: 'gamma_data'

GAMMA_CELERY_BROKER_URL: 'amqp://guest@rabbit'
GAMMA_CELERY_RESULT_BACKEND: 'redis://redis:6379'

# Media settings
GAMMA_STORE_RELATIVE_URLS: False

### RGG Notifications block ###
# EDX Notification API
GAMMA_EDX_NOTIFICATION_ENABLED: False
GAMMA_EDX_NOTIFICATION_API_SUFFIX: notifications/api/v0/send-notification/

# OneSignal
ONESIGNAL_NOTIFICATION_ENABLED: False
ONE_SIGNAL_APP_ID: "{{ GAMMA_ONE_SIGNAL_APP_ID | default('Set-Me-Please') }}"
ONE_SIGNAL_APP_AUTH_KEY: "{{ GAMMA_SIGNAL_APP_AUTH_KEY | default('Set-Me-Please') }}"
### END RGG Notifications block ###

GAMMA_BOOTSTRAP_TASKS:
  - name: create superuser if not exists
    command: >
      python manage.py
      shell -c "from django.contrib.auth.models import User;
      User.objects.filter(username='{{ GAMMA_DJANGO_ADMIN_USER }}').exists() or
      User.objects.create_superuser('{{ GAMMA_DJANGO_ADMIN_USER }}', '{{ GAMMA_DJANGO_ADMIN_EMAIL }}', '{{ GAMMA_DJANGO_ADMIN_PASS }}')"
  - name: set secret and key
    command: >
      python manage.py
      shell -c "from core.models import AppClient;
      AppClient.objects.get_or_create(name='main', key='{{ GAMMA_APP_KEY }}', secret='{{ GAMMA_APP_SECRET }}')"
